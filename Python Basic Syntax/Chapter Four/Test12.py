# re模块
import re

# 1.findall：匹配
#从一个字符串中匹配出所有数字
lst=re.findall(r'\d+', '我今年18岁，我喜欢5个水果，吃掉2个，还剩3个')
print(lst) # ['18', '5', '2', '3']

# 2.search：判断
# 判断字符串中是否有数字，只能匹配第一个结果就返回
s=re.search(r'\d+', '我今年18岁，我喜欢5个水果，吃掉2个，还剩3个')
print(s.group())  # 18

#3.finditer：匹配所有结果，返回迭代器，i得到match对象，想从其中取出结果，需要group()
# 从字符串中匹配出所有数字
s=re.finditer(r'\d+', '我今年18岁，我喜欢5个水果，吃掉2个，还剩3个')
for i in s:
    print(i.group())  # 18 5 2 3

# 4.match：从字符串开头匹配，即默认加上了^
# 从字符串中匹配出第一个数字
s=re.match(r'\d+', '18岁，我喜欢5个水果，吃掉2个，还剩3个')
print(s.group())  # 18

# 5.split：分割字符串
# 以数字分割字符串
s=re.split(r'\d+', '我今年18岁，我喜欢5个水果，吃掉2个，还剩3个')
print(s)  # ['我今年', '岁，我喜欢', '个水果，吃掉', '个，还剩']

# 6.sub：替换字符串
# 将字符串中的数字替换为*
s=re.sub(r'\d+', '*', '我今年18岁，我喜欢5个水果，吃掉2个，还剩3个')
print(s)  # 我今年*岁，我喜欢*个水果，吃掉*个，还剩*个

# 6.subn：替换字符串，并返回替换次数
# 将字符串中的数字替换为*
s=re.subn(r'\d+', '*', '我今年18岁，我喜欢5个水果，吃掉2个，还剩3个')
print(s)  # 我今年*岁，我喜欢*个水果，吃掉*个，还剩*个

# 7.compile：将正则表达式编译成正则表达式对象，可以重复使用，相当于封装
# 将正则表达式编译成正则表达式对象
obj=re.compile(r'\d+') #先加载这个正则表达式，后面就可以重复使用
# 从字符串中匹配出第一个数字
s=obj.split('我今年18岁，我喜欢5个水果，吃掉2个，还剩3个')
print(s)  # ['我今年', '岁，我喜欢', '个水果，吃掉', '个，还剩']

#爬虫必会的重点,即在正则前面加上r,表示原始字符串，即忽略转义字符，把所有字符都当作普通字符,<>表示把匹配到的字符放到对应的组中
# (?P<组名>正则表达式)表示把正则匹配的结果放到对应的组中，组名可以自定义，后面可以用group()或者group("组名")取出组中的内容
obj=re.compile(r'今天吃了(?P<mian>\d+)碗面，又吃了(?P<meat>\d+)个肉')
s=obj.finditer('哈哈哈哈，我今天吃了19碗面，又吃了9个肉，我喜欢5个水果，吃掉2个，还剩3个')
for i in s:
    print(i.group("mian"))
    print(i.group("meat"))
