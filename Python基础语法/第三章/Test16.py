# 汉诺塔问题：汉诺塔（又称河内塔）问题是源于印度一个古老传说的益智玩具。大梵天创造世界的时候做了三根金刚石柱子，
# 在一根柱子上从下往上按照大小顺序摞着64片黄金圆盘。大梵天命令婆罗门把圆盘从下面开始按大小顺序重新摆放在另一根柱子上。并且规定，在小圆盘上不能放大圆盘，在三根柱子之间一次只能移动一个圆盘。
# 将A柱子上的n个盘子移动到C柱子上，要求：
# 步骤：
# 将n-1个盘子从A经过C移动到B
# 将第n个盘子从A移动到C
# 将n-1个盘子从B经过A移动到C
# 递归实现
count=0
def hanoi(n, a, b, c):
    global count
    if n>0:
        hanoi(n - 1, a, c, b)
        print(a, '-->', c)
        count += 1
        hanoi(n - 1, b, a, c)
hanoi(64, 'A', 'B', 'C')
print("移动次数",count)